Въведение
Selenium е портативна структура за тестване на софтуер при уеб приложения. Той е набор от софтуерни инструменти, всяко с различен подход за поддръжка на автоматизацията на тестове. Всичките заедно предоставят множество функции за тестване на всякакви видове уеб приложения. Позволява сравняването на резултата от теста с актуалното поведение на приложението. Едно от най-големите предимства на Selenium е възможността за изпълнение на тестовете върху множество браузър платформи. Има свой собсвен домейн-специфичен език (Selenese), на който могат да се пишат тестове на голям брой от популярните програмни езици, включващи Java, C#, Groovy, Perl, PHP, Phyton и Ruby. Selenium върви върху платформите Windows, Linux и Macintosh. Той е open-source софтуер и може да се изтегли и използва без заплащане. 





История







Селениум IDE






Селениум Remote Control

Селениум Remote Control (RC) е сървър, написан на Java, който приема команди за браузъра чрез HTTP. RC прави възможно да се напишат автоматизирани тестове за уеб приложения, на който и да е език за програмиране, което спомага за по-добра интеграция на Selenium в съществуващите софтуерни рамки за компонентно тестване (unit testing frameworks). За да направи по-лесно писането на тестове, проектът Selenium в момента осигурява клиентски драйвери за PHP, Python, Ruby, .NET, Perl и Java. Java драйверът, например, може да се използва с JavaScript (чрез Rhino engine).

Selenium RC се състои от две основни части - сървър и клиентски библиотеки. Сървърът получава Selenese команди от тестовата програма, интерпретира ги и докладва обратно към вашата програма резултатите от изпълнението на тези тестове. Сървърът RC пакетира Selenium Core ​​и автоматично го инжектира в браузъра. Това се случва, когато тестовата програма отваря браузъра (като се използва функцията на клиентската библиотека API). Selenium-Core е JavaScript програма, всъщност представлява набор от функции на JavaScript, който интерпретира и изпълнява Selenese команди чрез вградения в браузъра JavaScript интерпретатор. Сървърът получава Selenese команди от тестовата програма, която използва обикновени HTTP GET/POST заявки. Това означава, че може да се използва всеки език за програмиране, който може да изпраща HTTP заявки, за да се автоматизират Selenium тестовете в браузъра.

Другата основна част на Selenium RC са клиентските библиотеки. Те осигуряват програмната база, която позволява стартирането на Selenium команди от програма с ваш собствен дизайн. Налице е различна клиентска библиотека за всеки поддържан език. Selenium клиентската библиотека предоставя програмен интерфейс (API), т.е. набор от функции, които стартират Selenium команди от вашата собствена програма. В рамките на всеки интерфейс има функция за програмиране, която поддържа всяка Selenese команда. Клиентската библиотека приема Selenese команда и я предава към Selenium сървъра за обработване на конкретно действие или тест на приложението за тестване (AUT - Application Under Test). Клиентската библиотека също получава резултата от тази команда и я изпраща обратно към вашата програма. Вашата програма може да получи резултата и да го съхрани в променлива и така да го отчете като успех или провал, или евентуално да предприеме корективни действия, ако това се окаже неочаквана грешка.

Selenium RC официално бе оттеглен с пускането на Selenium 2 в услуга на Selenium WebDriver.






Селеним WebDriver

Selenium WebDriver е усъвършенстван вариант на Selenium RC. Selenium WebDriver приема команди (изпратени от Selenese или ClientAPI) и ги изпраща към уеб браузъра. Имплементира се през browser – специален браузър драйвер, служещ за изпращане на команди към браузър и връщането на резултат. Повечето от браузър драйверите отварят браузър приложения (като Firefox, Internet Explorer); също така има и HtmlUnit драйвер, който симулира браузър, използващ HtmlUnit. WebDriver e името на основният интерфейс, на който трябва да се пишат тестовете, но има и още няколко имплементации, като HtmlUnit Driver, Firefox Driver, Internet Explorer Driver, Chrome Driver, Opera Driver, IOS Driver, Android Driver.
За разлика от Selenium 1, където Selenium сървърът беше нужно да изпълнява тестове, Selenium WebDriver не се нуждае от сървър за да изпълнява тестове. Вместо това WebDriver директно стартира инстанция на браузъра и го контролира. Въпреки това е възможно използването на Selenium Grid с WebDriver за да се изпълняват тестове върху отдалечени системи(remote systems). Където е възможно, WebDriver използва вътрешни за операционната система команди за контролиране на браузъра, вместо браузър-базирани JavaScript команди. Това помага да се избегнат проблеми с тънките разлики между командите на OC и JavaScript командите, като ограниченията за сигурност. Selenium WebDriver e създаден за по-добра поддръжка на динамични уеб страници, където елементи от страницата могат да се променят без да се презарежда страницата.
Selenium WebDriver прави директни извиквания към браузъра, използвайки поддръжката за автомация на дадения браузър. На практика това означава, че Selenium 2.0 API има значително по-малко извиквания от Selenium 1.0 API. Докато Selenium 1.0 се стреми да представи богат интерфейс за много различни операции на браузъра, Selenium 2.0 се стреми да представи набор от градивни блокове, чрез които потребителите да могат да изградят свой собствен DSL (Domain Specific Language) или по-точно обектно-ориентирано API с добър дизайн и поддръжка на модерни и напреднали “web-app testing” проблеми. Такъв DSL вече съществува: Watir проектът в езика Ruby има голям набор от добри дизайни. В Ruby, Watir-webdriver  имплементира Watir API като обвивка на Selenium WebDriver. Watir-webdriver е създаден напълно автоматично чрез WebDriver и HTML спесификации.
Java версията на WebDriver предоставя имплементация на Selenium-RC API.  Това означава, че може да се използва основната технология на WebDriver, използвайки Selenium-RC API. Използва се за обратна съвместимост. Също позволява да се използват двете API-та заедно върху един й същ тест код. WebDriver не предоставя поддръжка за толкова много браузъри както Selenium RC. За да се предостави тази поддръжка, използвайки WebDriver API, може да се използва SeleneseCommandExecutor.
През 2012 г., Simon Steward(създателят на WebDriver), който е работел тогава за Google, а сега за Facebook, и David Burns от Mozilla са обсъждали с W3C, WebDriver да бъде обявен като интернет стандарт. През юли 2012 г. е пуснат раборещият проект. Selenium WebDriver (Selenium 2.0) е напълно имплементиран и поддържан от Phyton, Ruby, Java и C#.




Селениум Grid





Селениум Екосистема
